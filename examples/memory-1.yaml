# Read a sequence of integers from memory, and check that they sum to 100

program:
  # r0: temporary, r1: address, r2: sum
  - [mov, 1, null, true, 2]         # mov r1, 2
  - [mov, 0, null, false, 0]        # mov r0, r0 (no-op)

  # Top of loop (pc = 2):
  - [load, 0, null, false, 1]       # load r0, [r1]
  - [add, 2, 2, false, 0]           # add r2, r2, r0
  - [add, 1, 1, true, 1]            # add r1, r1, 1
  - [cmpe, null, 0, true, 0]        # cmpe r0, 0
  - [cnjmp, null, null, true, 2]    # cnjmp 2

  - [sub, 0, 2, true, 100]          # sub r0, r2, 100

init_mem:
  - start: 2
    len: 8
    read_only: true
    secret: true
    data: [10, 20, 30, 40, 0, 0, 0, 0]

params:
  num_regs: 3
  trace_len: 29

trace:
  - [0, [ 0, 0,   0], false]
  - [1, [ 0, 2,   0], false]

  - [2, [ 0, 2,   0], false]
  - [3, [10, 2,   0], false]
  - [4, [10, 2,  10], false]
  - [5, [10, 3,  10], false]
  - [6, [10, 3,  10], false]

  - [2, [10, 3,  10], false]
  - [3, [20, 3,  10], false]
  - [4, [20, 3,  30], false]
  - [5, [20, 4,  30], false]
  - [6, [20, 4,  30], false]

  - [2, [20, 4,  30], false]
  - [3, [30, 4,  30], false]
  - [4, [30, 4,  60], false]
  - [5, [30, 5,  60], false]
  - [6, [30, 5,  60], false]

  - [2, [30, 5,  60], false]
  - [3, [40, 5,  60], false]
  - [4, [40, 5, 100], false]
  - [5, [40, 6, 100], false]
  - [6, [40, 6, 100], false]

  - [2, [40, 6, 100], false]
  - [3, [ 0, 6, 100], false]
  - [4, [ 0, 6, 100], false]
  - [5, [ 0, 7, 100], false]
  - [6, [ 0, 7, 100], true]

  - [7, [ 0, 7, 100], true]
  - [8, [ 0, 7, 100], true]

advice:
  3:  [[MemOp, 2, 10, read]]
  8:  [[MemOp, 3, 20, read]]
  13: [[MemOp, 4, 30, read]]
  18: [[MemOp, 5, 40, read]]
  23: [[MemOp, 6, 0, read]]
