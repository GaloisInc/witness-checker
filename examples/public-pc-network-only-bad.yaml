## FLAGS: --validate-only --expect-zero
# Another simple example, where all connections between segments go through the
# state routing network.

- [0,1,0,0]
- [public-pc]
-
  program:
    - [mov, 0, null, true, 2]   # mov r0, 2
    - [mull, 2, 0, false, 0]    # mull r2, r0, r0
    - [mull, 1, 0, true, 3]     # mull r1, r0, 3
    - [add, 0, 1, false, 2]     # add r0, r1, r2
    - [sub, 0, 0, true, 10]     # sub r0, r0, 10
    - [mov, 0, 0, false, 0]

  params:
    num_regs: 3
    trace_len: 6

  segments:
    # Segments go in order 0 -> 2 -> 1 -> 3
    - init_pc: null
      len: 2
      successors: []
      enter_from_network: false
      exit_to_network: true
    - init_pc: null
      len: 1
      successors: []
      enter_from_network: true
      exit_to_network: true
    - init_pc: null
      len: 2
      successors: []
      enter_from_network: true
      exit_to_network: true
    - init_pc: null
      len: 1
      successors: []
      enter_from_network: true
      exit_to_network: true

  trace:
    # Registers are wrongly set to nonsense values 99, 98, etc in each state.
    - segment: 0
      states:
        - [1, [99, 0, 0]]
        - [2, [2, 98, 4]]
    - segment: 2
      states:
        - [3, [2, 6, 97]]
        - [4, [96, 6, 4]]
    - segment: 1
      states:
        - [5, [0, 95, 4]]
    - segment: 3
      states:
        - [6, [0, 6, 94]]
