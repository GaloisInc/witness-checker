# Check that we detect when a sub-word-sized write modifies bytes outside its
# offset+width window.

- [0,1,0,0]
- []
-
  program:
    - [mov, 0, null, true, 0x01]      # mov r0, 0x01
    - [store1, null, 0, true, 0]      # store1 0, r0
    - [store1, null, 0, true, 0]      # store1 0, r0
    - [mov, 0, null, true, 0x0202]    # mov r0, 0x0202
    - [store2, null, 0, true, 0]      # store2 0, r0
    - [store2, null, 0, true, 0]      # store2 0, r0
    - [mov, 0, null, true, 0x04040404] # mov r0, 0x04040404
    - [store4, null, 0, true, 0]      # store4 0, r0
    - [store4, null, 0, true, 0]      # store4 0, r0
    - [mov, 0, null, true, 0x0808080808080808] # mov r0, 0x0808080808080808
    - [store8, null, 0, true, 0]      # store8 0, r0
    - [store8, null, 0, true, 0]      # store8 0, r0

  init_mem:
    - start: 0
      len: 8
      read_only: true
      secret: false

  params:
    num_regs: 1
    trace_len: 13

  trace:
    - [0, [0]]
    - [1, [0x01]]
    - [2, [0x01]]
    - [3, [0x01]]
    - [4, [0x0202]]
    - [5, [0x0202]]
    - [6, [0x0202]]
    - [7, [0x04040404]]
    - [8, [0x04040404]]
    - [9, [0x04040404]]
    - [10, [0x0808080808080808]]
    - [11, [0x0808080808080808]]
    - [12, [0x0808080808080808]]

  advice:
    2: [[MemOp, 0, 0x0000000000000001, write, 1]]
    3: [[MemOp, 0, 0x0101010101010101, write, 1]]
    5: [[MemOp, 0, 0x0101010101010202, write, 2]]
    6: [[MemOp, 0, 0x0202020202020202, write, 2]]
    8: [[MemOp, 0, 0x0202020204040404, write, 4]]
    9: [[MemOp, 0, 0x0404040404040404, write, 4]]
    11: [[MemOp, 0, 0x0808080808080808, write, 8]]
    12: [[MemOp, 0, 0x0808080808080808, write, 8]]
